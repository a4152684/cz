<!DOCTYPE html>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<title>数据显示</title>
	<meta charset="utf-8" />
	<meta name="renderer" content="webkit" />
	<link href="../../css/ol.css" rel="stylesheet" />
	<script src="../../libs/ol5/ol.js"></script>
	<script src="cz.js"></script>
	<script src="../../libs/jquery-1.11.2.min.js"></script>
	<link href="../Others/jquery-ui-1.12.1/jquery-ui.min.css" rel="stylesheet" />
	<script src="../Others/jquery-ui-1.12.1/jquery-ui.min.js"></script>
	<link href="../Others/bootstrap-3.3.7-dist/css/bootstrap.min.css" rel="stylesheet" />
	<script src="../Others/bootstrap-3.3.7-dist/js/bootstrap.min.js"></script>
	<style type="text/css">
		body, html, div, ul, li, iframe, p, img {
			border: none;
			padding: 0;
			margin: 0;
			font-size: 14px;
			font-family: "微软雅黑";
		}

		#menu {
			width: 100%;
			height: 45px;
			padding: 5px 10px;
			left: 10px;
		}

		.btn {
			margin-right: 15px;
		}

		#map {
			width: 100%;
			height: 570px;
		}

		.ui-widget-header {
			border: 1px solid #aaaaaa;
			background: #cccccc url(images/ui-bg_highlight-soft_75_cccccc_1x100.png) 50% 50% repeat-x;
			color: #222222;
			font-weight: bold;
		}

		.ui-widget, .ui-widget input, .ui-widget select {
			font-size: 14px;
			font-family: "微软雅黑";
		}

			.ui-widget .ui-widget {
				font-size: 14px;
				font-family: "微软雅黑";
				color: #222222;
			}
	</style>
</head>
<body>
	<div id='control' align="center">
	<label>2020年</label>
	<select id='select_month'>
		<option value="01" >1</option>
		<option value="02" >2</option>
		<option value="03" >3</option>
		<option value="04" >4</option>
		<option value="05" selected >5</option>
		<option value="06" >6</option>
		</select>
	<label>月</label>
	<select id='select_day'>
		<option value="01" selected>1</option>
		<option value="02" >2</option>
		<option value="03" >3</option>
		<option value="04" >4</option>
		<option value="05" >5</option>
		<option value="06" >6</option>
		<option value="07" >7</option>
		<option value="08" >8</option>
		<option value="09" >9</option>
		<option value="10" >10</option>
		<option value="11" >11</option>
		<option value="12" >12</option>
		<option value="13" >13</option>
		<option value="14" >14</option>
		<option value="15" >15</option>
		<option value="16" >16</option>
		<option value="17" >17</option>
		<option value="18" >18</option>
		<option value="19" >19</option>
		<option value="20" >20</option>
		<option value="21" >21</option>
		<option value="22" >22</option>
		<option value="23" >23</option>
		<option value="24" >24</option>
		<option value="25" >25</option>
		<option value="26" >26</option>
		<option value="27" >27</option>
		<option value="28" >28</option>
		<option value="29" >29</option>
		<option value="30" >30</option>
		<option value="31" >31</option>
		</select>
	<label>日</label>
	<input type="button" value="查询" id="cx">
		<br>
	</div>
	
	<div id="mapCon">
       <!-- Popup -->
       <div id="popup" class="ol-popup"></div>
    </div>
 <script>
//实例化Map对象加载地图
		var geojson_source=new ol.source.Vector({
					projection: 'EPSG:4326',
					url: "china.geojson", //GeoJSON的文件路径
					format: new ol.format.GeoJSON()
					});
        var map = new ol.Map({
            //地图容器div的ID
            target: 'mapCon',
            //地图容器中加载的图层
            layers: [
             	new ol.layer.Tile({
					source: new ol.source.OSM(),
					zIndex: 10
				}),
							
				new ol.layer.Vector({
				title: '中国地图',
				source: geojson_source
				})
								
            ],
            //地图视图设置
            view: new ol.View({
                //地图初始中心点
                center: ol.proj.fromLonLat([114, 32]),
                //地图初始显示级别
                zoom: 5
            })
        });
		var flashFeature;  //热区要素
        var preFeature;  //前一个热区要素
        var flag = false; //是否是同一个要素的标识
        var feature; //当前鼠标选中要素
        var draw; //绘制对象
        var geoStr = null; // 当前绘制图形的坐标串
        var currentFeature = null; //当前绘制的几何要素
        /**
        * 在地图容器中添加矢量区图层、热区绘制图层
        */
        //绘制热区的样式
        var flashStyle = new ol.style.Style({
            fill: new ol.style.Fill({
                color: 'rgba(255, 102, 0, 0.2)'
            }),
            stroke: new ol.style.Stroke({
                color: '#cc3300',
                width: 2
            }),
            image: new ol.style.Circle({
                radius: 7,
                fill: new ol.style.Fill({
                    color: '#cc3300'
                })
            })
        });
        //矢量数据源
        var vectSource = new ol.source.Vector({});
        //矢量图层
        var vectLayer = new ol.layer.Vector({
            source: vectSource,
            style: flashStyle,
            opacity: 0.5,
			zIndex: 100
        });
        map.addLayer(vectLayer); //将矢量图层加载到地图容器中
        //矢量数据源（热区）
        var hotSpotsSource = new ol.source.Vector({});
        //矢量图层（热区）
        var hotSpotsLayer = new ol.layer.Vector({
            source: hotSpotsSource,
            style: flashStyle,
            opacity: 1,
			zIndex: 200
        });
        map.addLayer(hotSpotsLayer); //将热区图层加载到地图容器中
        /**
        * 在地图容器中创建一个Overlay
        */
        var element = document.getElementById('popup');
        var popup = new ol.Overlay(/** @type {olx.OverlayOptions} */({
            element: element,
            positioning: 'bottom-center',
            stopEvent: false
        }));
        map.addOverlay(popup); //将popup叠加层添加到地图容器中

		//添加显示
		 document.getElementById('cx').onclick = function () {			
            map.un('pointermove', showData, this); //移除鼠标移动事件监听
            selectData(); //通过后台查询热区要素显示并实现热区功能
        };
    </script>
</body>
</html>